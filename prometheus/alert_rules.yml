groups:
  - name: example
    rules:
      # General instance down alert
      - alert: InstanceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Instance {{ $labels.instance }} down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minute."

      # cAdvisor alerts
      - alert: HighContainerCPUUsage
        expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[3m])) BY (instance, name) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage in container {{ $labels.name }}"
          description: "Container {{ $labels.name }} is using more than 80% CPU."

      - alert: HighContainerMemoryUsage
        expr: (sum(container_memory_usage_bytes{name!=""}) BY (instance, name)) > 2000000000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage in container {{ $labels.name }}"
          description: "Container {{ $labels.name }} is using more than 2GB of memory."

      # PostgreSQL alerts
      - alert: HighPostgresConnections
        expr: pg_stat_activity_count{state="active"} > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High number of active PostgreSQL connections on {{ $labels.instance }}"
          description: "PostgreSQL instance {{ $labels.instance }} has more than 100 active connections."

      # Django alerts
      - alert: High5xxResponses
        expr: rate(django_http_responses_total_by_status_total{job="django", status=~"5.."}[5m]) > 1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High number of 5xx responses from Django server"
          description: "The Django server is returning a high number of 5xx responses."

      - alert: HighRequestLatency
        expr: histogram_quantile(0.95, sum(irate(django_http_requests_latency_seconds_by_view_method_bucket{job="django"}[5m])) by (le)) > 0.5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High request latency from Django server"
          description: "The Django server is experiencing high request latency."

  - name: django.rules
    rules:
    - record: job:django_http_requests_before_middlewares_total:sum_rate30s
      expr: sum(rate(django_http_requests_before_middlewares_total[30s])) BY (job)
    - record: job:django_http_requests_unknown_latency_total:sum_rate30s
      expr: sum(rate(django_http_requests_unknown_latency_total[30s])) BY (job)
    - record: job:django_http_ajax_requests_total:sum_rate30s
      expr: sum(rate(django_http_ajax_requests_total[30s])) BY (job)
    - record: job:django_http_responses_before_middlewares_total:sum_rate30s
      expr: sum(rate(django_http_responses_before_middlewares_total[30s])) BY (job)
    - record: job:django_http_requests_unknown_latency_including_middlewares_total:sum_rate30s
      expr: sum(rate(django_http_requests_unknown_latency_including_middlewares_total[30s]))
        BY (job)
    - record: job:django_http_requests_body_total_bytes:sum_rate30s
      expr: sum(rate(django_http_requests_body_total_bytes[30s])) BY (job)
    - record: job:django_http_responses_streaming_total:sum_rate30s
      expr: sum(rate(django_http_responses_streaming_total[30s])) BY (job)
    - record: job:django_http_responses_body_total_bytes:sum_rate30s
      expr: sum(rate(django_http_responses_body_total_bytes[30s])) BY (job)
    - record: job:django_http_requests_total:sum_rate30s
      expr: sum(rate(django_http_requests_total_by_method[30s])) BY (job)
    - record: job:django_http_requests_total_by_method:sum_rate30s
      expr: sum(rate(django_http_requests_total_by_method[30s])) BY (job, method)
    - record: job:django_http_requests_total_by_transport:sum_rate30s
      expr: sum(rate(django_http_requests_total_by_transport[30s])) BY (job, transport)
    - record: job:django_http_requests_total_by_view:sum_rate30s
      expr: sum(rate(django_http_requests_total_by_view_transport_method[30s])) BY (job,
        view)
    - record: job:django_http_requests_total_by_view_transport_method:sum_rate30s
      expr: sum(rate(django_http_requests_total_by_view_transport_method[30s])) BY (job,
        view, transport, method)
    - record: job:django_http_responses_total_by_templatename:sum_rate30s
      expr: sum(rate(django_http_responses_total_by_templatename[30s])) BY (job, templatename)
    - record: job:django_http_responses_total_by_status:sum_rate30s
      expr: sum(rate(django_http_responses_total_by_status[30s])) BY (job, status)
    - record: job:django_http_responses_total_by_status_name_method:sum_rate30s
      expr: sum(rate(django_http_responses_total_by_status_name_method[30s])) BY (job,
        status, name, method)
    - record: job:django_http_responses_total_by_charset:sum_rate30s
      expr: sum(rate(django_http_responses_total_by_charset[30s])) BY (job, charset)
    - record: job:django_http_exceptions_total_by_type:sum_rate30s
      expr: sum(rate(django_http_exceptions_total_by_type[30s])) BY (job, type)
    - record: job:django_http_exceptions_total_by_view:sum_rate30s
      expr: sum(rate(django_http_exceptions_total_by_view[30s])) BY (job, view)
    - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
      expr: histogram_quantile(0.5, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "50"
    - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
      expr: histogram_quantile(0.95, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "95"
    - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
      expr: histogram_quantile(0.99, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "99"
    - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
      expr: histogram_quantile(0.999, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "99.9"
    - record: job:django_http_requests_latency_seconds:quantile_rate30s
      expr: histogram_quantile(0.5, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "50"
    - record: job:django_http_requests_latency_seconds:quantile_rate30s
      expr: histogram_quantile(0.95, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "95"
    - record: job:django_http_requests_latency_seconds:quantile_rate30s
      expr: histogram_quantile(0.99, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "99"
    - record: job:django_http_requests_latency_seconds:quantile_rate30s
      expr: histogram_quantile(0.999, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
        BY (job, le))
      labels:
        quantile: "99.9"
    - record: job:django_model_inserts_total:sum_rate1m
      expr: sum(rate(django_model_inserts_total[1m])) BY (job, model)
    - record: job:django_model_updates_total:sum_rate1m
      expr: sum(rate(django_model_updates_total[1m])) BY (job, model)
    - record: job:django_model_deletes_total:sum_rate1m
      expr: sum(rate(django_model_deletes_total[1m])) BY (job, model)
    - record: job:django_db_new_connections_total:sum_rate30s
      expr: sum(rate(django_db_new_connections_total[30s])) BY (alias, vendor)
    - record: job:django_db_new_connection_errors_total:sum_rate30s
      expr: sum(rate(django_db_new_connection_errors_total[30s])) BY (alias, vendor)
    - record: job:django_db_execute_total:sum_rate30s
      expr: sum(rate(django_db_execute_total[30s])) BY (alias, vendor)
    - record: job:django_db_execute_many_total:sum_rate30s
      expr: sum(rate(django_db_execute_many_total[30s])) BY (alias, vendor)
    - record: job:django_db_errors_total:sum_rate30s
      expr: sum(rate(django_db_errors_total[30s])) BY (alias, vendor, type)
    - record: job:django_migrations_applied_total:max
      expr: max(django_migrations_applied_total) BY (job, connection)
    - record: job:django_migrations_unapplied_total:max
      expr: max(django_migrations_unapplied_total) BY (job, connection)