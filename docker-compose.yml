services:
  web:
    build: ./django
    volumes:
      - ./django:/code  
    env_file:
      - .env
    ports:
      - "8000:8000"  
    depends_on:
      db:
        condition: service_healthy  # Ensures 'db' service is healthy before starting 'web'
    networks:
      - transcendence

  db:
    build: ./postgresql
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
    networks:
      - transcendence
  
  nginx:
    build: ./nginx
    volumes:
      - ./django:/code  
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - transcendence

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
    ports:
      - "3000:3000"
    volumes:
      # - grafana_data:/var/lib/grafana
      - '/Users/mkramer/Transcendence/grafana:/var/lib/grafana'
      - '/Users/mkramer/Transcendence/grafana/provisioning:/etc/grafana/provisioning'
    depends_on:
      - db
    links:
      - db
    networks:
      - transcendence

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - /Users/mkramer/Transcendence/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - transcendence

networks:
  transcendence:
    driver: bridge

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Users/mkramer/Transcendence/postgresql/data
      
  grafana_data:

